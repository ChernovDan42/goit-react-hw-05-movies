{"version":3,"file":"static/js/503.b3d37778.chunk.js","mappings":"mMACA,EAA6B,+BAA7B,EAAuE,6B,SCI1DA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,oBAASC,UAAWC,EAAAA,EAAAA,QAApB,UACE,gBAAKD,UAAWC,EAAAA,EAAAA,WAAhB,UACE,eAAID,UAAWE,EAAf,SACGL,EAAOM,KAAI,SAAAC,GACV,IAAQC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KACnB,OACE,eAAaP,UAAWE,EAAxB,UACE,SAAC,KAAD,CAAMM,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMZ,GAA1C,UACE,wBAAKQ,GAASC,OAFTF,EAMZ,SAKV,C,kHCvBYM,EAAY,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC1B,OACE,gBAAKZ,UAAWE,EAAAA,EAAAA,WAAhB,UACE,kBAAMW,SAAUD,EAAhB,WACE,kBAAOE,KAAK,OAAOP,KAAK,UACxB,mBAAQO,KAAK,SAAb,wBAIP,E,kBC8BD,EAnCe,WAAO,IAAD,EACnB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,eAApB,QAA+B,GAC9C,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOvB,EAAP,KAAewB,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACU,KAAdJ,IAIJK,EAAAA,EAAAA,IAAYL,GACTM,MAAK,YAA4B,IAAjBC,EAAgB,EAAxBC,KAAQD,QACfJ,EAAUI,EACX,IACAE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACV,IASJ,OACE,2BACE,qBAASlB,UAAWE,EAAAA,EAAAA,QAApB,WACE,SAACS,EAAD,CAAWC,YAVG,SAAAmB,GAClBA,EAAEC,iBACF,IAAMC,EAASF,EAAEG,OAAOC,SAAS5B,KAAK6B,MACtCnB,EAAgB,CAAEV,KAAM0B,IACxBF,EAAEG,OAAOG,OACV,IAMwB,IAAlBxC,EAAOyC,SAAgB,sCACxB,SAAC1C,EAAA,EAAD,CAAYC,OAAQA,QAI3B,C,4LCtCK0C,EAAS,mCACTC,EAAU,gCACHC,EAAe,kCAErB,SAASC,IACd,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sCAAkDD,GAC1D,CAEM,SAASK,EAAaC,GAC3B,OAAOF,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA6BK,EAA7B,oBAAgDN,GACxD,CAEM,SAASO,EAAaD,GAC3B,OAAOF,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA6BK,EAA7B,4BAAwDN,GAChE,CAEM,SAASQ,EAAgBF,GAC9B,OAAOF,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA6BK,EAA7B,4BAAwDN,GAChE,CAEM,SAAShB,EAAYhB,GAC1B,OAAOoC,EAAAA,EAAAA,IAAA,UACFH,EADE,8BAC2BjC,EAD3B,8DACqFgC,GAE7F,C,mBCzBD,KAAgB,QAAU,6BAA6B,WAAa,gCAAgC,WAAa,gC","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","components/SearchBox/SearchBox.jsx","pages/Movies.jsx","servises/APIFetch.js","webpack://react-homework-template/./src/components/styles/page_styles.module.css?5c33"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__P6SP5\",\"listLink\":\"MoviesList_listLink__Ke9VO\"};","import { Link, useLocation } from 'react-router-dom';\nimport pageStyles from '../styles/page_styles.module.css';\nimport css from './MoviesList.module.css';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <section className={pageStyles.section}>\n      <div className={pageStyles.containeer}>\n        <ul className={css.moviesList}>\n          {movies.map(movie => {\n            const { id, title, name } = movie;\n            return (\n              <li key={id} className={css.listLink}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  <h2>{title || name}</h2>\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array,\n};\n","import PropTypes from 'prop-types';\nimport css from '../styles/page_styles.module.css';\n\nexport const SearchBox = ({ submitQuery }) => {\n  return (\n    <div className={css.containeer}>\n      <form onSubmit={submitQuery}>\n        <input type=\"text\" name=\"name\" />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n};\n\nSearchBox.propTypes = {\n  submitQuery: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { searchMovie } from 'servises/APIFetch';\nimport css from '../components/styles/page_styles.module.css';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('name') ?? '';\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n\n    searchMovie(movieName)\n      .then(({ data: { results } }) => {\n        setMovies(results);\n      })\n      .catch(error => console.log(error));\n  }, [movieName]);\n\n  const submitQuery = e => {\n    e.preventDefault();\n    const params = e.target.elements.name.value;\n    setSearchParams({ name: params });\n    e.target.reset();\n  };\n\n  return (\n    <main>\n      <section className={css.section}>\n        <SearchBox submitQuery={submitQuery} />\n        {movies.length === 0 && <h1>No match</h1>}\n        <MoviesList movies={movies} />\n      </section>\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst APIKEY = 'd063a3c1ffdc1b15e46a20f479fc1290';\nconst BASEURL = 'https://api.themoviedb.org/3/';\nexport const IMAGEBASEURL = 'https://image.tmdb.org/t/p/w500';\n\nexport function getPopularMovies() {\n  return axios.get(`${BASEURL}trending/movie/day?api_key=${APIKEY}`);\n}\n\nexport function getMovieById(movieId) {\n  return axios.get(`${BASEURL}movie/${movieId}?api_key=${APIKEY}`);\n}\n\nexport function getMovieCast(movieId) {\n  return axios.get(`${BASEURL}movie/${movieId}/credits?api_key=${APIKEY}`);\n}\n\nexport function getMovieReviews(movieId) {\n  return axios.get(`${BASEURL}movie/${movieId}/reviews?api_key=${APIKEY}`);\n}\n\nexport function searchMovie(name) {\n  return axios.get(\n    `${BASEURL}search/movie?query=${name}&include_adult=false&language=en-US&page=1&api_key=${APIKEY}`\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"page_styles_section__yCKPn\",\"containeer\":\"page_styles_containeer__WMJX4\",\"buttonBack\":\"page_styles_buttonBack__mWl5k\"};"],"names":["MoviesList","movies","location","useLocation","className","pageStyles","css","map","movie","id","title","name","to","state","from","SearchBox","submitQuery","onSubmit","type","useSearchParams","searchParams","setSearchParams","movieName","get","useState","setMovies","useEffect","searchMovie","then","results","data","catch","error","console","log","e","preventDefault","params","target","elements","value","reset","length","APIKEY","BASEURL","IMAGEBASEURL","getPopularMovies","axios","getMovieById","movieId","getMovieCast","getMovieReviews"],"sourceRoot":""}