{"version":3,"file":"static/js/959.e64ae7a6.chunk.js","mappings":"4OACA,EAAsC,uCAAtC,EAA6F,iCAA7F,EAA2I,8BAA3I,EAAqL,6B,SCGxKA,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClBC,EAAuDD,EAAvDC,YAAaC,EAA0CF,EAA1CE,MAAOC,EAAmCH,EAAnCG,SAAUC,EAAyBJ,EAAzBI,aAAcC,EAAWL,EAAXK,OAC9CC,EAAOF,EAAaG,MAAM,EAAG,GAEnC,OACE,iBAAKC,UAAWC,EAAhB,WACE,gBACEC,IACET,EAAW,yCAC2BA,GAClCU,EAENC,IAAI,SACJC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,QAE/B,iBAAKP,UAAWC,EAAhB,WACE,0BACGP,EADH,IACWI,EADX,QAGA,sCACA,uBAAIH,KACJ,oCACA,eAAIK,UAAWC,EAAf,SACGJ,EAAOW,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACjB,OACE,eAAaV,UAAWC,EAAxB,SACGS,GADMD,EAIZ,WAKV,E,QCSD,EAzCqB,WAAO,IAAD,IACjBE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,YAAlC,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAQ3D,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaZ,GACVa,MAAK,SAAAC,GAAG,OAAIV,EAAaU,EAAIC,KAArB,IACRC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACjB,KAGF,2BACE,oBAASX,UAAW+B,EAAAA,EAAAA,QAApB,UACE,iBAAK/B,UAAW+B,EAAAA,EAAAA,WAAhB,WACE,SAAC,KAAD,CAAMC,GAAId,EAAoBe,QAA9B,UACE,mBAAQjC,UAAW+B,EAAAA,EAAAA,WAAmBG,KAAK,SAA3C,uBAKDpB,IAAa,SAACvB,EAAD,CAAWC,MAAOsB,KAEhC,2BACE,yBACE,SAAC,KAAD,CAAMkB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAG,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,YAMX,C,4LC3CKC,EAAS,mCACTC,EAAU,gCACHC,EAAe,kCAErB,SAASC,IACd,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sCAAkDD,GAC1D,CAEM,SAASd,EAAaZ,GAC3B,OAAO8B,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA6B3B,EAA7B,oBAAgD0B,GACxD,CAEM,SAASK,EAAa/B,GAC3B,OAAO8B,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA6B3B,EAA7B,4BAAwD0B,GAChE,CAEM,SAASM,EAAgBhC,GAC9B,OAAO8B,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA6B3B,EAA7B,4BAAwD0B,GAChE,CAEM,SAASO,EAAYlC,GAC1B,OAAO+B,EAAAA,EAAAA,IAAA,UACFH,EADE,8BAC2B5B,EAD3B,8DACqF2B,GAE7F,C,mBCzBD,KAAgB,QAAU,6BAA6B,WAAa,gCAAgC,WAAa,gC","sources":["webpack://react-homework-template/./src/components/MovieInfo/MovieInfo.module.css?df02","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx","servises/APIFetch.js","webpack://react-homework-template/./src/components/styles/page_styles.module.css?5c33"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieInfoContainner\":\"MovieInfo_movieInfoContainner__8HDKh\",\"movieInfoText\":\"MovieInfo_movieInfoText__TnfAD\",\"genresList\":\"MovieInfo_genresList__XamDA\",\"genreItem\":\"MovieInfo_genreItem__3iPen\"};","import stockPhoto from '../default/images/logo_imt_small2_medium.jpeg';\nimport css from './MovieInfo.module.css';\nimport PropTypes from 'prop-types';\n\nexport const MovieInfo = ({ movie }) => {\n  const { poster_path, title, overview, release_date, genres } = movie;\n  const year = release_date.slice(0, 4);\n\n  return (\n    <div className={css.movieInfoContainner}>\n      <img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w500${poster_path}`\n            : stockPhoto\n        }\n        alt=\"poster\"\n        style={{ width: 264, height: 426 }}\n      />\n      <div className={css.movieInfoText}>\n        <h1>\n          {title}({year})\n        </h1>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h2>Genres</h2>\n        <ul className={css.genresList}>\n          {genres.map(({ id, name }) => {\n            return (\n              <li key={id} className={css.genreItem}>\n                {name}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n","import { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { useEffect, useState, useRef, Suspense } from 'react';\nimport { getMovieById } from '../servises/APIFetch';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport styles from '../components/styles/page_styles.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    getMovieById(movieId)\n      .then(res => setMovieData(res.data))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <main>\n      <section className={styles.section}>\n        <div className={styles.containeer}>\n          <Link to={backLinkLocationRef.current}>\n            <button className={styles.buttonBack} type=\"button\">\n              Go back\n            </button>\n          </Link>\n\n          {movieData && <MovieInfo movie={movieData} />}\n\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      </section>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst APIKEY = 'd063a3c1ffdc1b15e46a20f479fc1290';\nconst BASEURL = 'https://api.themoviedb.org/3/';\nexport const IMAGEBASEURL = 'https://image.tmdb.org/t/p/w500';\n\nexport function getPopularMovies() {\n  return axios.get(`${BASEURL}trending/movie/day?api_key=${APIKEY}`);\n}\n\nexport function getMovieById(movieId) {\n  return axios.get(`${BASEURL}movie/${movieId}?api_key=${APIKEY}`);\n}\n\nexport function getMovieCast(movieId) {\n  return axios.get(`${BASEURL}movie/${movieId}/credits?api_key=${APIKEY}`);\n}\n\nexport function getMovieReviews(movieId) {\n  return axios.get(`${BASEURL}movie/${movieId}/reviews?api_key=${APIKEY}`);\n}\n\nexport function searchMovie(name) {\n  return axios.get(\n    `${BASEURL}search/movie?query=${name}&include_adult=false&language=en-US&page=1&api_key=${APIKEY}`\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"page_styles_section__yCKPn\",\"containeer\":\"page_styles_containeer__WMJX4\",\"buttonBack\":\"page_styles_buttonBack__mWl5k\"};"],"names":["MovieInfo","movie","poster_path","title","overview","release_date","genres","year","slice","className","css","src","stockPhoto","alt","style","width","height","map","id","name","movieId","useParams","useState","movieData","setMovieData","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","getMovieById","then","res","data","catch","error","console","log","styles","to","current","type","Suspense","fallback","APIKEY","BASEURL","IMAGEBASEURL","getPopularMovies","axios","getMovieCast","getMovieReviews","searchMovie"],"sourceRoot":""}